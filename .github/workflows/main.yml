# .github/workflows/main.yml
name: CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  # --- TEST STAGE ---
  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/astral-sh/uv:python3.13-bookworm-slim
    steps:
      - name: Check out source
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y gcc python3-dev

      - name: Install Python packages
        run: |
          uv pip install --system .
          uv pip install --system .[test]

      - name: Build Cython modules
        run: |
          cd src/loxwebsocket/cython_modules
          python setup.py build_ext --inplace
          cd ../../../

      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=loxmqttrelay --cov-report=xml --cov-report=term

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage.xml
          path: coverage.xml

  # --- BUILD & PUSH DOCKER STAGE ---
  docker-build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: "linux/amd64"
            optimization: "-O3 -march=native -ffast-math"
            suffix: "optimized"
          - platform: "linux/amd64"
            optimization: "-O2 -mtune=generic"
            suffix: "compatible"

    steps:
      - name: Check out source
        uses: actions/checkout@v4

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKER_USERNAME }}/loxmqttrelay

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ vars.DOCKER_USERNAME }}/loxmqttrelay:${{ github.sha }}-${{ matrix.suffix }}
            ${{ vars.DOCKER_USERNAME }}/loxmqttrelay:latest-${{ matrix.suffix }}
          build-args: |
            OPTIMIZATION_FLAGS=${{ matrix.optimization }}
          annotations: ${{ steps.meta.outputs.annotations }}
          provenance: true
          sbom: true

      # Optional: Add a final step to tag the compatible version as default "latest"
      - name: Tag compatible version as latest
        if: matrix.suffix == 'compatible' && github.event_name != 'pull_request'
        run: |
          docker pull ${{ vars.DOCKER_USERNAME }}/loxmqttrelay:${{ github.sha }}-compatible
          docker tag ${{ vars.DOCKER_USERNAME }}/loxmqttrelay:${{ github.sha }}-compatible ${{ vars.DOCKER_USERNAME }}/loxmqttrelay:latest
          docker push ${{ vars.DOCKER_USERNAME }}/loxmqttrelay:latest
